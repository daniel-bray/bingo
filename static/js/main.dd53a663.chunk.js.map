{"version":3,"sources":["components/BoxComponent.js","scripts/randomNumber.js","components/ColumnComponent.js","components/Board.js","App.js","reportWebVitals.js","index.js"],"names":["Box","props","letter","Card","className","style","width","height","fontSize","icon","faStar","randomNumber","min","max","Math","floor","random","Column","numArray","length","number","includes","push","position","Board","App","useState","quantity","setQuantity","boards","setBoards","Form","Group","controlId","Control","type","onChange","e","target","value","placeholder","Button","variant","onClick","event","preventDefault","numArr","console","log","i","generateBoards","map","board","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.dd53a663.chunk.js","sourcesContent":["import { Card } from \"react-bootstrap\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faStar } from \"@fortawesome/free-solid-svg-icons\";\n\nconst Box = (props) => {\n\tconst { letter } = props;\n\treturn (\n\t\t<Card\n\t\t\tclassName=\"justify-content-center align-items-center border-5 border-dark rounded-0\"\n\t\t\tstyle={{\n\t\t\t\twidth: \"15rem\",\n\t\t\t\theight: \"15rem\",\n\t\t\t\tfontSize: \"9rem\",\n\t\t\t}}\n\t\t>\n\t\t\t{letter === \"FREE\" ? <FontAwesomeIcon icon={faStar} /> : letter}\n\t\t</Card>\n\t);\n};\n\nexport default Box;\n","export const randomNumber = (min, max) => {\n\treturn Math.floor(Math.random() * max) + min;\n};\n","import { randomNumber } from \"../scripts/randomNumber\";\nimport Box from \"./BoxComponent\";\nfunction Column(props) {\n\tconst { min } = props;\n\n\tconst numArray = [];\n\n\twhile (numArray.length < 5) {\n\t\tlet number = randomNumber(min, 15);\n\t\tif (!numArray.includes(number)) {\n\t\t\tnumArray.push(number);\n\t\t}\n\t}\n\treturn (\n\t\t<div>\n\t\t\t<Box letter={numArray[0]} />\n\t\t\t<Box letter={numArray[1]} />\n\t\t\t{props.position === 2 ? (\n\t\t\t\t<Box letter={\"FREE\"} />\n\t\t\t) : (\n\t\t\t\t<Box letter={numArray[2]} />\n\t\t\t)}\n\t\t\t<Box letter={numArray[3]} />\n\t\t\t<Box letter={numArray[4]} />\n\t\t</div>\n\t);\n}\n\nexport default Column;\n","import Box from \"./BoxComponent\";\nimport Column from \"./ColumnComponent\";\nconst Board = () => (\n\t<div className=\"container box printing\">\n\t\t<div>\n\t\t\t<Box letter={\"B\"} />\n\t\t\t<Column position={0} min={1} />\n\t\t</div>\n\t\t<div>\n\t\t\t<Box letter={\"I\"} />\n\t\t\t<Column position={1} min={16} />\n\t\t</div>\n\t\t<div>\n\t\t\t<Box letter={\"N\"} />\n\t\t\t<Column position={2} min={31} />\n\t\t</div>\n\t\t<div>\n\t\t\t<Box letter={\"G\"} />\n\t\t\t<Column position={3} min={46} />\n\t\t</div>\n\t\t<div>\n\t\t\t<Box letter={\"O\"} />\n\t\t\t<Column position={4} min={61} />\n\t\t</div>\n\t</div>\n\t// </div>\n);\n\nexport default Board;\n","import { useState } from \"react\";\nimport Board from \"./components/Board\";\nimport { Button, Form } from \"react-bootstrap\";\nimport \"./App.css\";\n\nfunction App() {\n\tconst [quantity, setQuantity] = useState(0);\n\tconst [boards, setBoards] = useState([]);\n\n\tconst generateBoards = (event, quantity) => {\n\t\tevent.preventDefault();\n\t\tconst numArr = [];\n\t\tconsole.log(\"event\", event);\n\t\tconsole.log(quantity);\n\t\tfor (let i = 0; i < quantity; i++) {\n\t\t\tnumArr.push(i);\n\t\t}\n\t\tsetBoards(numArr);\n\t};\n\n\treturn (\n\t\t<div className=\"App\">\n\t\t\t<h1>Bingo Card Generator</h1>\n\t\t\t<Form className=\"container\">\n\t\t\t\t<div className=\"row justify-content-md-center\">\n\t\t\t\t\t<div className=\"col col-md-3 \">\n\t\t\t\t\t\t<Form.Group className=\"mb-3\" controlId=\"quantity\">\n\t\t\t\t\t\t\t<Form.Control\n\t\t\t\t\t\t\t\ttype=\"number\"\n\t\t\t\t\t\t\t\tonChange={(e) => setQuantity(e.target.value)}\n\t\t\t\t\t\t\t\tplaceholder=\"How many cards?\"\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</Form.Group>\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\tvariant=\"success\"\n\t\t\t\t\t\t\ttype=\"submit\"\n\t\t\t\t\t\t\tonClick={(event) => generateBoards(event, quantity)}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\tSubmit\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</Form>\n\t\t\t{boards.map((board) => {\n\t\t\t\tconsole.log(board);\n\t\t\t\treturn <Board key={board} />;\n\t\t\t})}\n\t\t</div>\n\t);\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<App />\n\t</React.StrictMode>,\n\tdocument.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}